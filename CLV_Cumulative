DECLARE FromDate DATE DEFAULT '2020-11-01';
DECLARE ToDate DATE DEFAULT '2021-01-24';


WITH CTE AS 
(
  SELECT
    user_pseudo_id AS CustomerID, -- 270154 Unique Customers for whole DB
    CAST(DATE_TRUNC(MIN(PARSE_DATE('%Y%m%d',event_date)), WEEK) AS DATE)  AS RegistrationWeek
  FROM
  `tc-da-1.turing_data_analytics.raw_events` AS events
  GROUP BY 
    CustomerID
  HAVING 
    RegistrationWeek BETWEEN FromDate AND ToDate -- 267942 unique Customer for that timeframe
  ORDER BY
    CustomerID ASC
),

rev AS
(
  SELECT
    user_pseudo_id AS CustomerID,
    purchase_revenue_in_usd as revenue,
    CAST(DATE_TRUNC(PARSE_DATE('%Y%m%d',event_date), WEEK) AS DATE) AS purchase_week
  FROM 
    `turing_data_analytics.raw_events`
  WHERE 
   event_name = 'purchase' AND CAST(DATE_TRUNC(TIMESTAMP_MICROS(event_timestamp), WEEK) AS DATE) BETWEEN FromDate AND ToDate --check the data range
),

Original AS
(
  SELECT 
    CAST(RegistrationWeek AS STRING) AS RegistrationWeek,
    --COUNT(DISTINCT CustomerID) AS customer, -- SUM of this has to be 267942
    SUM(CASE WHEN purchase_week = RegistrationWeek THEN revenue END)/COUNT(DISTINCT c.CustomerID)AS week0,
    SUM(CASE WHEN purchase_week = DATE_ADD (RegistrationWeek, INTERVAL 1 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week1,
    SUM(CASE WHEN purchase_week = DATE_ADD (RegistrationWeek, INTERVAL 2 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week2,
    SUM(CASE WHEN purchase_week = DATE_ADD (RegistrationWeek, INTERVAL 3 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week3,
    SUM(CASE WHEN purchase_week = DATE_ADD (RegistrationWeek, INTERVAL 4 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week4,
    SUM(CASE WHEN purchase_week = DATE_ADD (RegistrationWeek, INTERVAL 5 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week5,
    SUM(CASE WHEN purchase_week = DATE_ADD (RegistrationWeek, INTERVAL 6 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week6,
    SUM(CASE WHEN purchase_week = DATE_ADD (RegistrationWeek, INTERVAL 7 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week7,
    SUM(CASE WHEN purchase_week = DATE_ADD (RegistrationWeek, INTERVAL 8 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week8,
    SUM(CASE WHEN purchase_week = DATE_ADD (RegistrationWeek, INTERVAL 9 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week9,
    SUM(CASE WHEN purchase_week = DATE_ADD (RegistrationWeek, INTERVAL 10 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week10,
    SUM(CASE WHEN purchase_week = DATE_ADD (RegistrationWeek, INTERVAL 11 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week11,
    SUM(CASE WHEN purchase_week = DATE_ADD (RegistrationWeek, INTERVAL 12 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week12
  FROM 
    CTE c
  LEFT JOIN 
    rev r 
  ON 
    r.CustomerID = c.CustomerID 
  GROUP BY 
    RegistrationWeek
  ORDER BY 
    RegistrationWeek
), 
CumulativeAverages AS
(
  SELECT 
    'Weekly Cumulative Average'AS RegistrationWeek,
    ROUND(AVG(week0),4) AS week0,
    ROUND(AVG(week0)+AVG(week1),4) AS week1,
    ROUND(AVG(week0)+AVG(week1) +AVG(week2),4) AS week2,
    ROUND(AVG(week0)+AVG(week1) +AVG(week2) +AVG(week3),4) AS week3,
    ROUND(AVG(week0)+AVG(week1) +AVG(week2) +AVG(week3) +AVG(week4),4) AS week4,
    ROUND(AVG(week0)+AVG(week1) +AVG(week2) +AVG(week3) +AVG(week4) +AVG(week5),4) AS week5,
    ROUND(AVG(week0)+AVG(week1) +AVG(week2) +AVG(week3) +AVG(week4) +AVG(week5) +AVG(week6),4) AS week6,
    ROUND(AVG(week0)+AVG(week1) +AVG(week2) +AVG(week3) +AVG(week4) +AVG(week5) +AVG(week6) +AVG(week7),4) AS week7,
    ROUND(AVG(week0)+AVG(week1) +AVG(week2) +AVG(week3) +AVG(week4) +AVG(week5) +AVG(week6) +AVG(week7) +AVG(week8),4) AS week8,
    ROUND(AVG(week0)+AVG(week1) +AVG(week2) +AVG(week3) +AVG(week4) +AVG(week5) +AVG(week6) +AVG(week7) +AVG(week8) +AVG(week9),4) AS week9,
    ROUND(AVG(week0)+AVG(week1) +AVG(week2) +AVG(week3) +AVG(week4) +AVG(week5) +AVG(week6) +AVG(week7) +AVG(week8) +AVG(week9) +AVG(week10),4) AS week10,
    ROUND(AVG(week0)+AVG(week1) +AVG(week2) +AVG(week3) +AVG(week4) +AVG(week5) +AVG(week6) +AVG(week7) +AVG(week8) +AVG(week9) +AVG(week10) +AVG(week11),4) AS week11,
    ROUND(AVG(week0)+AVG(week1) +AVG(week2) +AVG(week3) +AVG(week4) +AVG(week5) +AVG(week6) +AVG(week7) +AVG(week8) +AVG(week9) +AVG(week10) +AVG(week11) +AVG(week12),4) AS week12
  FROM 
    Original
), 
CumulativeGrowthPercentage AS
(
  SELECT
   'Cumulative Growth'AS RegistrationWeek,
    NULL,
    ROUND(((week1-week0)/week0),4)*100 AS week1,
    ROUND(((week2-week1)/week1),4)*100 AS week2,
    ROUND(((week3-week2)/week2),4)*100 AS week3,
    ROUND(((week4-week3)/week3),4)*100 AS week4,
    ROUND(((week5-week4)/week4),4)*100 AS week5,
    ROUND(((week6-week5)/week5),4)*100 AS week6,
    ROUND(((week7-week6)/week6),3)*100 AS week7,
    ROUND(((week8-week7)/week7),4)*100 AS week8,
    ROUND(((week9-week8)/week8),4)*100 AS week9,
    ROUND(((week10-week9)/week9),3)*100 AS week10,
    ROUND(((week11-week10)/week10),5)*100 AS week11,
    ROUND(((week12-week11)/week11),5)*100 AS week12,

  FROM 
    CumulativeAverages
),

Cumulative AS 
(  
  SELECT 
    RegistrationWeek,
    --COUNT(DISTINCT CustomerID) AS HeadCount, -- SUM of this has to be 267942
    SUM(CASE WHEN purchase_week <= RegistrationWeek THEN revenue END)/COUNT(c.CustomerID)AS week0,
    SUM(CASE WHEN purchase_week <= DATE_ADD (RegistrationWeek, INTERVAL 1 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week1,
    SUM(CASE WHEN purchase_week <= DATE_ADD (RegistrationWeek, INTERVAL 2 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week2,
    SUM(CASE WHEN purchase_week <= DATE_ADD (RegistrationWeek, INTERVAL 3 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week3,
    SUM(CASE WHEN purchase_week <= DATE_ADD (RegistrationWeek, INTERVAL 4 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week4,
    SUM(CASE WHEN purchase_week <= DATE_ADD (RegistrationWeek, INTERVAL 5 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week5,
    SUM(CASE WHEN purchase_week <= DATE_ADD (RegistrationWeek, INTERVAL 6 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week6,
    SUM(CASE WHEN purchase_week <= DATE_ADD (RegistrationWeek, INTERVAL 7 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week7,
    SUM(CASE WHEN purchase_week <= DATE_ADD (RegistrationWeek, INTERVAL 8 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week8,
    SUM(CASE WHEN purchase_week <= DATE_ADD (RegistrationWeek, INTERVAL 9 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week9,
    SUM(CASE WHEN purchase_week <= DATE_ADD (RegistrationWeek, INTERVAL 10 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week10,
    SUM(CASE WHEN purchase_week <= DATE_ADD (RegistrationWeek, INTERVAL 11 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week11,
    SUM(CASE WHEN purchase_week <= DATE_ADD (RegistrationWeek, INTERVAL 12 WEEK) THEN revenue END)/COUNT(DISTINCT c.CustomerID) AS week12
  FROM 
    CTE c
  LEFT JOIN 
    rev r 
  ON 
    r.CustomerID = c.CustomerID 
  GROUP BY 
    1
  ORDER BY 
    1

),
CumulativeCleaned AS 
(
  SELECT
    CAST(RegistrationWeek AS STRING) AS RegistrationWeek,
    CASE WHEN DATE_ADD(RegistrationWeek,  INTERVAL 0 WEEK) > ToDate THEN NULL ELSE week0 END AS week0,
    CASE WHEN DATE_ADD(RegistrationWeek,  INTERVAL 1 WEEK) > ToDate THEN NULL ELSE week1 END AS week1,
    CASE WHEN DATE_ADD(RegistrationWeek,  INTERVAL 2 WEEK) > ToDate THEN NULL ELSE week2 END AS week2,
    CASE WHEN DATE_ADD(RegistrationWeek,  INTERVAL 3 WEEK) > ToDate THEN NULL ELSE week3 END AS week3,
    CASE WHEN DATE_ADD(RegistrationWeek,  INTERVAL 4 WEEK) > ToDate THEN NULL ELSE week4 END AS week4,
    CASE WHEN DATE_ADD(RegistrationWeek,  INTERVAL 5 WEEK) > ToDate THEN NULL ELSE week5 END AS week5,
    CASE WHEN DATE_ADD(RegistrationWeek,  INTERVAL 6 WEEK) > ToDate THEN NULL ELSE week6 END AS week6,
    CASE WHEN DATE_ADD(RegistrationWeek,  INTERVAL 7 WEEK) > ToDate THEN NULL ELSE week7 END AS week7,
    CASE WHEN DATE_ADD(RegistrationWeek,  INTERVAL 8 WEEK) > ToDate THEN NULL ELSE week8 END AS week8,
    CASE WHEN DATE_ADD(RegistrationWeek,  INTERVAL 9 WEEK) > ToDate THEN NULL ELSE week9 END AS week9,
    CASE WHEN DATE_ADD(RegistrationWeek,  INTERVAL 10 WEEK) > ToDate THEN NULL ELSE week10 END AS week10,
    CASE WHEN DATE_ADD(RegistrationWeek,  INTERVAL 11 WEEK) > ToDate THEN NULL ELSE week11 END AS week11,
    CASE WHEN DATE_ADD(RegistrationWeek,  INTERVAL 12 WEEK) > ToDate THEN NULL ELSE week12 END AS week12
  FROM
    Cumulative
  ORDER BY 
    1
)

  SELECT 
    *
  FROM
    CumulativeCleaned
UNION ALL
  SELECT
    *
  FROM
  CumulativeAverages
UNION ALL
 SELECT
    *
  FROM
    CumulativeGrowthPercentage
  ORDER BY
   1
